package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	SchemeBuilder.Register(&Room{}, &RoomList{})
}

// RoomSpec defines the desired state of Room
type RoomSpec struct {
	ID                    int         `json:"id"`
	BackoffLimit          int32       `json:"backoff-limit,omitempty"`
	ActiveDeadLineSeconds int64       `json:"active-dead-line-seconds,omitempty"`
	Actors                []Actor     `json:"actors"`
	Volumes               []Volume    `json:"volumes,omitempty"`
	Sketch                Sketch      `json:"sketch"`
	ConfigMaps            []ConfigMap `json:"config-maps,omitempty"`
}

// RoomStatus defines the observed state of Room
type RoomStatus struct{}

// +kubebuilder:object:root=true

// Room is the Schema for the rooms API
type Room struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   RoomSpec   `json:"spec,omitempty"`
	Status RoomStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RoomList contains a list of Room
type RoomList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Room `json:"items"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Room) DeepCopyInto(out *Room) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Room.
func (in *Room) DeepCopy() *Room {
	if in == nil {
		return nil
	}
	out := new(Room)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Room) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoomList) DeepCopyInto(out *RoomList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Room, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoomList.
func (in *RoomList) DeepCopy() *RoomList {
	if in == nil {
		return nil
	}
	out := new(RoomList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RoomList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoomSpec) DeepCopyInto(out *RoomSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoomSpec.
func (in *RoomSpec) DeepCopy() *RoomSpec {
	if in == nil {
		return nil
	}
	out := new(RoomSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoomStatus) DeepCopyInto(out *RoomStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoomStatus.
func (in *RoomStatus) DeepCopy() *RoomStatus {
	if in == nil {
		return nil
	}
	out := new(RoomStatus)
	in.DeepCopyInto(out)
	return out
}
